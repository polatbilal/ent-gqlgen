package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.62

import (
	"context"
	"fmt"

	"github.com/polatbilal/gqlgen-ent/api-core/ent"
	"github.com/polatbilal/gqlgen-ent/api-core/ent/companydetail"
	"github.com/polatbilal/gqlgen-ent/api-core/ent/jobdetail"
	"github.com/polatbilal/gqlgen-ent/api-core/graphql/model"
	"github.com/polatbilal/gqlgen-ent/api-core/middlewares"
)

// UpdateCompany is the resolver for the updateCompany field.
func (r *mutationResolver) UpdateCompany(ctx context.Context, input model.CompanyDetailInput) (*ent.CompanyDetail, error) {
	client := middlewares.GetClientFromContext(ctx)

	company, err := client.CompanyDetail.Query().Where(companydetail.CompanyCodeEQ(input.CompanyCode)).Only(ctx)
	if err != nil {
		return nil, fmt.Errorf("şirket bulunamadı: %v", err)
	}

	updatedCompany, err := client.CompanyDetail.UpdateOneID(company.ID).
		SetName(input.Name).
		SetCompanyCode(input.CompanyCode).
		SetNillableAddress(input.Address).
		SetNillablePhone(input.Phone).
		SetNillableFax(input.Fax).
		SetNillableMobilePhone(input.MobilePhone).
		SetNillableEmail(input.Email).
		SetNillableWebsite(input.Website).
		SetNillableTaxAdmin(input.TaxAdmin).
		SetNillableTaxNo(input.TaxNo).
		SetNillableChamberInfo(input.ChamberInfo).
		SetNillableChamberRegisterNo(input.ChamberRegisterNo).
		SetNillableVisaDate(input.VisaDate).
		SetNillableVisaEndDate(input.VisaEndDate).
		SetNillableVisaFinishedFor90Days(input.VisaFinishedFor90days).
		SetNillableCorePersonAbsent90Days(input.CorePersonAbsent90days).
		SetNillableIsClosed(input.IsClosed).
		SetNillableOwnerName(input.OwnerName).
		SetNillableOwnerTcNo(input.OwnerTcNo).
		SetNillableOwnerAddress(input.OwnerAddress).
		SetNillableOwnerPhone(input.OwnerPhone).
		SetNillableOwnerEmail(input.OwnerEmail).
		SetNillableOwnerRegisterNo(input.OwnerRegisterNo).
		SetNillableOwnerCareer(input.OwnerCareer).
		Save(ctx)

	if err != nil {
		return nil, fmt.Errorf("şirket güncellenemedi: %v", err)
	}

	return updatedCompany, nil
}

// Company is the resolver for the company field.
func (r *queryResolver) Company(ctx context.Context, yibfNo int) (*ent.CompanyDetail, error) {
	client := middlewares.GetClientFromContext(ctx)

	// Önce JobDetail'i bul
	jobDetail, err := client.JobDetail.Query().
		Where(jobdetail.YibfNoEQ(yibfNo)).
		Only(ctx)
	if err != nil {
		return nil, fmt.Errorf("iş detayı bulunamadı: %v", err)
	}

	// JobRelations üzerinden company'i bul
	relations, err := jobDetail.QueryRelations().Only(ctx)
	if err != nil {
		return nil, fmt.Errorf("iş ilişkileri bulunamadı: %v", err)
	}

	company, err := relations.QueryCompany().Only(ctx)
	if ent.IsNotFound(err) {
		return nil, nil
	}
	if err != nil {
		return nil, fmt.Errorf("şirket bulunamadı: %v", err)
	}

	return company, nil
}

// CompanyByCode is the resolver for the companyByCode field.
func (r *queryResolver) CompanyByCode(ctx context.Context, companyCode int) (*ent.CompanyDetail, error) {
	client := middlewares.GetClientFromContext(ctx)
	company, err := client.CompanyDetail.Query().Where(companydetail.CompanyCodeEQ(companyCode)).Only(ctx)
	if err != nil {
		return nil, fmt.Errorf("şirket bulunamadı: %v", err)
	}
	return company, nil
}
