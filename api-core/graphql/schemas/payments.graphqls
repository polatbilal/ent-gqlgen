type JobPayments {
  id: Int
  PaymentNo: Int
  PaymentDate: Time
  PaymentType: String
  TotalPayment: Float
  LevelRequest: Float
  LevelApprove: Float
  Amount: Float
  State: String
  yibfNo: Int
}

input JobPaymentsInput {
  PaymentNo: Int!
  PaymentDate: Time
  PaymentType: String
  TotalPayment: Float
  LevelRequest: Float
  LevelApprove: Float
  Amount: Float
  yibfNo: Int
  State: String
}

extend type Query {
  jobPayments(yibfNo: Int!): [JobPayments!] @auth
}

extend type Mutation {
  createJobPayments(input: JobPaymentsInput!): JobPayments
    @goField(forceResolver: true)
    @auth
  updateJobPayments(id: Int!, input: JobPaymentsInput!): JobPayments
    @goField(forceResolver: true)
    @auth
  deleteJobPayments(id: Int!): JobPayments @goField(forceResolver: true) @auth
}
