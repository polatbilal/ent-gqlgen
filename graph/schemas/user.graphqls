type User {
  id: ID
  Username: String!
  Name: String
  Email: String
  Phone: Int
  Password: String
  Role: String!
  CreatedAt: Time
  Companies: [CompanyDetail!]! @goField(forceResolver: true)
}

input UserInput {
  Username: String!
  Name: String!
  Email: String!
  Phone: Int
  Password: String!
  Role: String
  CompanyIDs: [Int!]
}

extend type Query {
  user(id: ID!): User! @goField(forceResolver: true) @auth
  allUsers: [User!]! @goField(forceResolver: true) @auth
}

extend type Mutation {
  createUser(input: UserInput!): User! @goField(forceResolver: true) @auth
  updateUser(id: ID!, input: UserInput!): User! @goField(forceResolver: true) @auth
  deleteUser(id: ID!): Boolean! @goField(forceResolver: true) @auth
}
