type CompanyEngineer {
  id: ID!
  Name: String!
  Address: String
  Email: String
  TcNo: Int
  Phone: String
  RegNo: Int
  CertNo: Int
  Career: String!
  Position: String!
  YDSID: Int
  Employment: String
  Dismissal: String
  Note: String
  Status: Int
  Company: CompanyDetail
}

input CompanyEngineerInput {
  YDSID: Int
  Name: String!
  CompanyCode: Int!
  Address: String
  Email: String
  TcNo: Int
  Phone: String
  RegNo: Int
  CertNo: Int
  Career: String
  Position: String
  Employment: String
  Dismissal: String
  Note: String
  Status: Int
}

input EngineerFilterInput {
  id: ID
  YDSID: Int
  career: String
  position: String
}

extend type Query {
  engineer(filter: EngineerFilterInput): [CompanyEngineer]!
}

extend type Mutation {
  createEngineer(input: CompanyEngineerInput!): CompanyEngineer!
    @goField(forceResolver: true)
    @auth

  updateEngineer(id: ID!, input: CompanyEngineerInput!): CompanyEngineer!
    @goField(forceResolver: true)
    @auth
}
