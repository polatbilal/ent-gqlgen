package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.62

import (
	"context"
	"fmt"

	"github.com/polatbilal/gqlgen-ent/ent"
	"github.com/polatbilal/gqlgen-ent/ent/jobdetail"
	"github.com/polatbilal/gqlgen-ent/ent/jobowner"
	"github.com/polatbilal/gqlgen-ent/graph/model"
	"github.com/polatbilal/gqlgen-ent/middlewares"
)

// CreateOwner is the resolver for the createOwner field.
func (r *mutationResolver) CreateOwner(ctx context.Context, input model.JobOwnerInput) (*ent.JobOwner, error) {
	panic(fmt.Errorf("not implemented: CreateOwner - createOwner"))
}

// UpdateOwner is the resolver for the updateOwner field.
func (r *mutationResolver) UpdateOwner(ctx context.Context, id string, input model.JobOwnerInput) (*ent.JobOwner, error) {
	panic(fmt.Errorf("not implemented: UpdateOwner - updateOwner"))
}

// AllOwner is the resolver for the allOwner field.
func (r *queryResolver) AllOwner(ctx context.Context) ([]*ent.JobOwner, error) {
	client := middlewares.GetClientFromContext(ctx)
	return client.JobOwner.Query().All(ctx)
}

// AllOwnerByYdsID is the resolver for the allOwnerByYdsId field.
func (r *queryResolver) AllOwnerByYdsID(ctx context.Context, ydsID int) ([]*ent.JobOwner, error) {
	client := middlewares.GetClientFromContext(ctx)
	return client.JobOwner.Query().Where(jobowner.YdsID(ydsID)).All(ctx)
}

// AllOwnerJob is the resolver for the allOwnerJob field.
func (r *queryResolver) AllOwnerJob(ctx context.Context, yibfNo *int) ([]*ent.JobOwner, error) {
	client := middlewares.GetClientFromContext(ctx)
	return client.JobOwner.Query().Where(jobowner.HasOwnersWith(jobdetail.YibfNoEQ(*yibfNo))).All(ctx)
}
